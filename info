    1. First we are going to need to setup ssh keys between the root user of the main server and the backup sever so we don’t have to store passwords in the scripts. This involves a couple of steps:
        1. We generate the key pair on the main server with the following command: ssh-keygen -t rsa

        2. Once the key pair is generated, we need to copy the public key to the remote server. We can use the `ssh-copy-id` command for this.

    2. Now we  write a bash script for the backup, encryption and transfare to remote server. Then we change the scripts permissions with chmod 700 <filename> so that only the root user can view and run it.


    3. Now we need to create the secure password file that we specified In the code. To do this we create a file in the  /home/zero/Backup directory called pwd then change the file permissions so that only the owner  (in this case, root) user can read it. We do this with chmod 600 pwd

    4. Now we create a cron job that automatically runs the backup script at 3AM every sunday from the root account: crontab -e and append this line to the end of the file: 0 3 * * 0 /home/zero/Backup/backup_script.sh

To decrypt the file on the remote server use the following command: 
gpg -d backup_xxxxxxxx.tar.gz.gpg > decrypted.tar.gz
It will then ask for the password and decrypt the file’s.
